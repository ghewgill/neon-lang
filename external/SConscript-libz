import os
import shutil
import sys
import tarfile

Import("env")

libz = None

libzenv = Environment()
if not env["RELEASE"]:
    if sys.platform == "win32":
        libzenv.Append(CFLAGS=[
            "/MTd",
            "/Zi",
            "/Od",
        ])

if GetOption("clean"):
    shutil.rmtree("zlib-1.2.8", ignore_errors=True)
elif not os.path.exists("zlib-1.2.8/configure"):
    tarfile.open("zlib-1.2.8.tar.gz").extractall(".")

if sys.platform == "win32":
    libz = libzenv.Library("zlib-1.2.8/zlib.lib", [
        "zlib-1.2.8/adler32.c",
        "zlib-1.2.8/compress.c",
        "zlib-1.2.8/crc32.c",
        "zlib-1.2.8/deflate.c",
        "zlib-1.2.8/inffast.c",
        "zlib-1.2.8/inflate.c",
        "zlib-1.2.8/inftrees.c",
        "zlib-1.2.8/trees.c",
        "zlib-1.2.8/uncompr.c",
        "zlib-1.2.8/zutil.c",
    ])
    env.Append(CPPPATH=["external/zlib-1.2.8"])
else:
    conf = Configure(env)
    if not conf.CheckLibWithHeader("z", "zlib.h", "C++"):
        libz = libzenv.Command("zlib-1.2.8/libz.a", "zlib-1.2.8/configure", "cd external/zlib-1.2.8 && ./configure --static && make")
        env.Append(CPPPATH=["external/zlib-1.2.8"])
    conf.Finish()

Return(["libz"])
