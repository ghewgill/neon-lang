import os
import shutil
import sys
import tarfile

Import("env")

libs_curses = []
include_curses = None

cursesenv = Environment()

if sys.platform == "win32":
    if GetOption("clean"):
        shutil.rmtree("PDCurses-3.4", ignore_errors=True)
    elif not os.path.exists("PDCurses-3.4/win32/vcwin32.mak"):
        tarfile.open("PDCurses-3.4.tar.gz").extractall(".")
        if not env["RELEASE"]:
            makefile = open("PDCurses-3.4/win32/vcwin32.mak").read()
            makefile = makefile.replace("= -Z7 -DPDCDEBUG", "= -Z7 -DPDCDEBUG -MTd")
            open("PDCurses-3.4/win32/vcwin32.mak", "w").write(makefile)

    libs_curses = [cursesenv.Command("PDCurses-3.4/win32/pdcurses.lib", "PDCurses-3.4/win32/vcwin32.mak", "cd external/PDCurses-3.4/win32 && nmake -fvcwin32.mak WIDE=Y UTF8=Y DEBUG=Y")]
    libs_curses.extend(["advapi32", "user32"])
    include_curses = "external/PDCurses-3.4"
else:
    conf = Configure(env)
    if not conf.CheckLibWithHeader("ncurses", "curses.h", "c"):
        print "Could not find ncurses library"
        Exit(1)
    conf.Finish()

Return(["libs_curses", "include_curses"])
