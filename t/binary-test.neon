IMPORT binary

print(str(binary.and32(10, 12)))
--= 8

print(str(binary.extract32(10, 1, 3)))
--= 5

print("\(binary.get32(10, 1))")
--= TRUE

print(str(binary.not32(5)))
--= 4294967290

print(str(binary.or32(10, 12)))
--= 14

print(str(binary.replace32(10, 1, 3, 2)))
--= 4

print(str(binary.set32(10, 1, FALSE)))
--= 8

print(str(binary.set32(10, 2, TRUE)))
--= 14

print(str(binary.shiftLeft32(10, 2)))
--= 40

print(str(binary.shiftRight32(10, 2)))
--= 2

print(str(binary.shiftRightSigned32(-10, 2)))
--= -3

print(str(binary.xor32(10, 12)))
--= 6

print(str(binary.not64(5)))
--= 18446744073709551610

print(binary.andBytes(HEXBYTES "aa 55 aa 55", HEXBYTES "01 02 03 04").toString())
--= HEXBYTES "00 00 02 04"

print(binary.notBytes(HEXBYTES "aa 55 aa 55").toString())
--= HEXBYTES "55 aa 55 aa"

print(binary.orBytes(HEXBYTES "aa 55 aa 55", HEXBYTES "01 02 03 04").toString())
--= HEXBYTES "ab 57 ab 55"

print(binary.xorBytes(HEXBYTES "aa 55 aa 55", HEXBYTES "01 02 03 04").toString())
--= HEXBYTES "ab 57 a9 51"

TESTCASE binary.and32(0, 0) = 0
TESTCASE binary.and32(0xffffffff, 0xffffffff) = 0xffffffff
TESTCASE binary.and32(-1, 0) EXPECT ValueRangeException
TESTCASE binary.and32(0, -1) EXPECT ValueRangeException
TESTCASE binary.and32(0x100000000, 0xffffffff) EXPECT ValueRangeException
TESTCASE binary.and32(0xffffffff, 0x100000000) EXPECT ValueRangeException

TESTCASE binary.and64(0, 0) = 0
TESTCASE binary.and64(0xffffffffffffffff, 0xffffffffffffffff) = 0xffffffffffffffff
TESTCASE binary.and64(-1, 0) EXPECT ValueRangeException
TESTCASE binary.and64(0, -1) EXPECT ValueRangeException
TESTCASE binary.and64(0x10000000000000000, 0xffffffffffffffff) EXPECT ValueRangeException
TESTCASE binary.and64(0xffffffffffffffff, 0x10000000000000000) EXPECT ValueRangeException

TESTCASE binary.extract32(0, 0, 0) = 0
TESTCASE binary.extract32(0xffffffff, 32, 32) = 0
TESTCASE binary.extract32(-1, 0, 0) EXPECT ValueRangeException
TESTCASE binary.extract32(0, -1, 0) EXPECT ValueRangeException
TESTCASE binary.extract32(0, 0, -1) EXPECT ValueRangeException
TESTCASE binary.extract32(0x100000000, 32, 32) EXPECT ValueRangeException
TESTCASE binary.extract32(0xffffffff, 33, 32) EXPECT ValueRangeException
TESTCASE binary.extract32(0xffffffff, 32, 33) EXPECT ValueRangeException

TESTCASE binary.extract64(0, 0, 0) = 0
TESTCASE binary.extract64(0xffffffffffffffff, 64, 64) = 0
TESTCASE binary.extract64(-1, 0, 0) EXPECT ValueRangeException
TESTCASE binary.extract64(0, -1, 0) EXPECT ValueRangeException
TESTCASE binary.extract64(0, 0, -1) EXPECT ValueRangeException
TESTCASE binary.extract64(0x10000000000000000, 64, 64) EXPECT ValueRangeException
TESTCASE binary.extract64(0xffffffffffffffff, 65, 64) EXPECT ValueRangeException
TESTCASE binary.extract64(0xffffffffffffffff, 64, 65) EXPECT ValueRangeException

TESTCASE binary.get32(0, 0) = FALSE
TESTCASE binary.get32(0xffffffff, 32) = FALSE
TESTCASE binary.get32(-1, 0) EXPECT ValueRangeException
TESTCASE binary.get32(0, -1) EXPECT ValueRangeException
TESTCASE binary.get32(0x100000000, 32) EXPECT ValueRangeException
TESTCASE binary.get32(0xffffffff, 33) EXPECT ValueRangeException

TESTCASE binary.get64(0, 0) = FALSE
TESTCASE binary.get64(0xffffffffffffffff, 64) = FALSE
TESTCASE binary.get64(-1, 0) EXPECT ValueRangeException
TESTCASE binary.get64(0, -1) EXPECT ValueRangeException
TESTCASE binary.get64(0x10000000000000000, 64) EXPECT ValueRangeException
TESTCASE binary.get64(0xffffffffffffffff, 65) EXPECT ValueRangeException

TESTCASE binary.not32(0) = 0xffffffff
TESTCASE binary.not32(0xffffffff) = 0
TESTCASE binary.not32(-1) EXPECT ValueRangeException
TESTCASE binary.not32(0x100000000) EXPECT ValueRangeException

TESTCASE binary.not64(0) = 0xffffffffffffffff
TESTCASE binary.not64(0xffffffffffffffff) = 0
TESTCASE binary.not64(-1) EXPECT ValueRangeException
TESTCASE binary.not64(0x10000000000000000) EXPECT ValueRangeException

TESTCASE binary.or32(0, 0) = 0
TESTCASE binary.or32(0xffffffff, 0xffffffff) = 0xffffffff
TESTCASE binary.or32(-1, 0) EXPECT ValueRangeException
TESTCASE binary.or32(0, -1) EXPECT ValueRangeException
TESTCASE binary.or32(0x100000000, 0xffffffff) EXPECT ValueRangeException
TESTCASE binary.or32(0xffffffff, 0x100000000) EXPECT ValueRangeException

TESTCASE binary.or64(0, 0) = 0
TESTCASE binary.or64(0xffffffffffffffff, 0xffffffffffffffff) = 0xffffffffffffffff
TESTCASE binary.or64(-1, 0) EXPECT ValueRangeException
TESTCASE binary.or64(0, -1) EXPECT ValueRangeException
TESTCASE binary.or64(0x10000000000000000, 0xffffffffffffffff) EXPECT ValueRangeException
TESTCASE binary.or64(0xffffffffffffffff, 0x10000000000000000) EXPECT ValueRangeException

TESTCASE binary.replace32(0, 0, 0, 0) = 0
TESTCASE binary.replace32(0xffffffff, 32, 32, 0xffffffff) = 0xffffffff
TESTCASE binary.replace32(-1, 0, 0, 0) EXPECT ValueRangeException
TESTCASE binary.replace32(0, -1, 0, 0) EXPECT ValueRangeException
TESTCASE binary.replace32(0, 0, -1, 0) EXPECT ValueRangeException
TESTCASE binary.replace32(0, 0, 0, -1) EXPECT ValueRangeException
TESTCASE binary.replace32(0x100000000, 32, 32, 0xffffffff) EXPECT ValueRangeException
TESTCASE binary.replace32(0xffffffff, 33, 32, 0xffffffff) EXPECT ValueRangeException
TESTCASE binary.replace32(0xffffffff, 32, 33, 0xffffffff) EXPECT ValueRangeException
TESTCASE binary.replace32(0xffffffff, 32, 32, 0x100000000) EXPECT ValueRangeException

TESTCASE binary.replace64(0, 0, 0, 0) = 0
TESTCASE binary.replace64(0xffffffffffffffff, 64, 64, 0xffffffffffffffff) = 0xffffffffffffffff
TESTCASE binary.replace64(-1, 0, 0, 0) EXPECT ValueRangeException
TESTCASE binary.replace64(0, -1, 0, 0) EXPECT ValueRangeException
TESTCASE binary.replace64(0, 0, -1, 0) EXPECT ValueRangeException
TESTCASE binary.replace64(0, 0, 0, -1) EXPECT ValueRangeException
TESTCASE binary.replace64(0x10000000000000000, 64, 64, 0xffffffffffffffff) EXPECT ValueRangeException
TESTCASE binary.replace64(0xffffffffffffffff, 65, 64, 0xffffffffffffffff) EXPECT ValueRangeException
TESTCASE binary.replace64(0xffffffffffffffff, 64, 65, 0xffffffffffffffff) EXPECT ValueRangeException
TESTCASE binary.replace64(0xffffffffffffffff, 64, 64, 0x10000000000000000) EXPECT ValueRangeException

TESTCASE binary.set32(0, 0, FALSE) = 0
TESTCASE binary.set32(0xffffffff, 32, FALSE) = 0xffffffff
TESTCASE binary.set32(-1, 0, FALSE) EXPECT ValueRangeException
TESTCASE binary.set32(0, -1, FALSE) EXPECT ValueRangeException
TESTCASE binary.set32(0x100000000, 32, FALSE) EXPECT ValueRangeException
TESTCASE binary.set32(0xffffffff, 33, FALSE) EXPECT ValueRangeException

TESTCASE binary.set64(0, 0, FALSE) = 0
TESTCASE binary.set64(0xffffffffffffffff, 64, FALSE) = 0xffffffffffffffff
TESTCASE binary.set64(-1, 0, FALSE) EXPECT ValueRangeException
TESTCASE binary.set64(0, -1, FALSE) EXPECT ValueRangeException
TESTCASE binary.set64(0x10000000000000000, 64, FALSE) EXPECT ValueRangeException
TESTCASE binary.set64(0xffffffffffffffff, 65, FALSE) EXPECT ValueRangeException

TESTCASE binary.shiftLeft32(0, 0) = 0
TESTCASE binary.shiftLeft32(0xffffffff, 32) = 0
TESTCASE binary.shiftLeft32(-1, 0) EXPECT ValueRangeException
TESTCASE binary.shiftLeft32(0, -1) EXPECT ValueRangeException
TESTCASE binary.shiftLeft32(0x100000000, 32) EXPECT ValueRangeException
TESTCASE binary.shiftLeft32(0xffffffff, 33) EXPECT ValueRangeException

TESTCASE binary.shiftLeft64(0, 0) = 0
TESTCASE binary.shiftLeft64(0xffffffffffffffff, 64) = 0
TESTCASE binary.shiftLeft64(-1, 0) EXPECT ValueRangeException
TESTCASE binary.shiftLeft64(0, -1) EXPECT ValueRangeException
TESTCASE binary.shiftLeft64(0x10000000000000000, 64) EXPECT ValueRangeException
TESTCASE binary.shiftLeft64(0xffffffffffffffff, 65) EXPECT ValueRangeException

TESTCASE binary.shiftRight32(0, 0) = 0
TESTCASE binary.shiftRight32(0xffffffff, 32) = 0
TESTCASE binary.shiftRight32(-1, 0) EXPECT ValueRangeException
TESTCASE binary.shiftRight32(0, -1) EXPECT ValueRangeException
TESTCASE binary.shiftRight32(0x100000000, 32) EXPECT ValueRangeException
TESTCASE binary.shiftRight32(0xffffffff, 33) EXPECT ValueRangeException

TESTCASE binary.shiftRight64(0, 0) = 0
TESTCASE binary.shiftRight64(0xffffffffffffffff, 64) = 0
TESTCASE binary.shiftRight64(-1, 0) EXPECT ValueRangeException
TESTCASE binary.shiftRight64(0, -1) EXPECT ValueRangeException
TESTCASE binary.shiftRight64(0x10000000000000000, 64) EXPECT ValueRangeException
TESTCASE binary.shiftRight64(0xffffffffffffffff, 65) EXPECT ValueRangeException

TESTCASE binary.shiftRightSigned32(-0x80000000, 0) = -0x80000000
TESTCASE binary.shiftRightSigned32(0x7fffffff, 32) = 0
TESTCASE binary.shiftRightSigned32(-0x80000001, 0) EXPECT ValueRangeException
TESTCASE binary.shiftRightSigned32(-0x80000000, -1) EXPECT ValueRangeException
TESTCASE binary.shiftRightSigned32(0x80000000, 32) EXPECT ValueRangeException
TESTCASE binary.shiftRightSigned32(0x7fffffff, 33) EXPECT ValueRangeException

TESTCASE binary.shiftRightSigned64(-0x8000000000000000, 0) = -0x8000000000000000
TESTCASE binary.shiftRightSigned64(0x7fffffffffffffff, 64) = 0
TESTCASE binary.shiftRightSigned64(-0x8000000000000001, 0) EXPECT ValueRangeException
TESTCASE binary.shiftRightSigned64(-0x8000000000000000, -1) EXPECT ValueRangeException
TESTCASE binary.shiftRightSigned64(0x8000000000000000, 64) EXPECT ValueRangeException
TESTCASE binary.shiftRightSigned64(0x7fffffffffffffff, 65) EXPECT ValueRangeException

TESTCASE binary.xor32(0, 0) = 0
TESTCASE binary.xor32(0xffffffff, 0xffffffff) = 0
TESTCASE binary.xor32(-1, 0) EXPECT ValueRangeException
TESTCASE binary.xor32(0, -1) EXPECT ValueRangeException
TESTCASE binary.xor32(0x100000000, 0xffffffff) EXPECT ValueRangeException
TESTCASE binary.xor32(0xffffffff, 0x100000000) EXPECT ValueRangeException

TESTCASE binary.xor64(0, 0) = 0
TESTCASE binary.xor64(0xffffffffffffffff, 0xffffffffffffffff) = 0
TESTCASE binary.xor64(-1, 0) EXPECT ValueRangeException
TESTCASE binary.xor64(0, -1) EXPECT ValueRangeException
TESTCASE binary.xor64(0x10000000000000000, 0xffffffffffffffff) EXPECT ValueRangeException
TESTCASE binary.xor64(0xffffffffffffffff, 0x10000000000000000) EXPECT ValueRangeException
