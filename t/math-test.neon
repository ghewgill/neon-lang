IMPORT math

FUNCTION eq(x: Number, y: Number): Boolean
    IF y = 0 THEN
        RETURN x = 0
    END IF
    RETURN math.abs(math.abs(x - y) / y) < 1e-14
END FUNCTION

VAR exp: Number := 0

TESTCASE eq(math.Pi, 3.141592653589793238462643383279503)
TESTCASE eq(math.abs(-5), 5)
TESTCASE eq(math.acos(1), 0)
TESTCASE eq(math.asin(0), 0)
TESTCASE eq(math.atan(0), 0)
TESTCASE eq(math.ceil(5.5), 6)
TESTCASE eq(math.cos(0), 1)
TESTCASE eq(math.exp(0), 1)
TESTCASE eq(math.floor(-5.5), -6)
TESTCASE eq(math.log(1), 0)
TESTCASE eq(math.sign(-5), -1)
TESTCASE eq(math.sin(0), 0)
TESTCASE eq(math.sqrt(16), 4)
TESTCASE eq(math.tan(0), 0)
TESTCASE eq(math.acosh(1), 0)
TESTCASE eq(math.asinh(0), 0)
TESTCASE eq(math.atanh(0), 0)
TESTCASE eq(math.atan2(0, -1), 3.141592653589793238462643383279503)
TESTCASE eq(math.cbrt(8), 2)
TESTCASE eq(math.cosh(0), 1)
TESTCASE eq(math.erf(0), 0)
TESTCASE eq(math.erfc(0), 1)
TESTCASE eq(math.exp2(3), 8)
TESTCASE eq(math.expm1(0), 0)
TESTCASE eq(math.frexp(1/80, OUT exp), 0.125)
TESTCASE exp = -1
TESTCASE eq(math.hypot(3, 4), 5)
TESTCASE eq(math.ldexp(125, -3), 0.125)
TESTCASE eq(math.lgamma(2), 0)
TESTCASE eq(math.log10(100), 2)
TESTCASE eq(math.log1p(0), 0)
TESTCASE eq(math.log2(8), 3)
TESTCASE eq(math.max(45, 67), 67)
TESTCASE eq(math.min(45, 67), 45)
TESTCASE eq(math.nearbyint(5.2), 5)
TESTCASE math.odd(3)
TESTCASE math.odd(1.5) EXPECT PANIC "odd() requires integer"
TESTCASE eq(math.round(0, 3.14159), 3)
TESTCASE eq(math.round(1, 3.14159), 3.1)
TESTCASE eq(math.round(2, 3.14159), 3.14)
TESTCASE eq(math.round(3, 3.14159), 3.142)
TESTCASE eq(math.round(4, 3.14159), 3.1416)
TESTCASE eq(math.round(5, 3.14159), 3.14159)
TESTCASE eq(math.round(6, 3.14159), 3.14159)
TESTCASE eq(math.sinh(0), 0)
TESTCASE eq(math.tanh(0), 0)
TESTCASE eq(math.tgamma(6), 120)
TESTCASE eq(math.trunc(4), 4)
TESTCASE eq(math.trunc(3.9), 3)
TESTCASE eq(math.trunc(-3.9), -3)
TESTCASE eq(math.trunc(-5.5), -5)
