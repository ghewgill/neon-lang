IMPORT struct
VAR s: struct.Struct := struct.make([
    struct.field("field1", struct.Type.int32BE, 4),
    struct.field("field2", struct.Type.string, 20),
])

print("\(s.sizeof())")
%= 24

VAR b: Bytes := s.pack({
    "field1": 500,
    "field2": "hello",
})
VAR a: Array<Number> := b.toArray()
print("\(a.size())")
%= 24
print(str(a[0]))
%= 0
print(str(a[1]))
%= 0
print(str(a[2]))
%= 1
print(str(a[3]))
%= 244
print(str(a[4]))
%= 104
print(str(a[5]))
%= 101
print(str(a[6]))
%= 108
print(str(a[7]))
%= 108
print(str(a[8]))
%= 111
print(str(a[9]))
%= 0

LET v: Dictionary<Object> := s.unpack(b)
print(str(v["field1"]))
%= 500
print(v["field2"])
%= hello

b := s.pack({"field2": "hi"})
a := b.toArray()
print("\(a.size())")
%= 24
