IMPORT module
IMPORT module.enum

VAR r: module.record := module.record()
r.string := "hello"
print(r.string)
--= hello

print("\(module.var2)")
--= blue

print(r.method())
--= hellohello

print("\(module.const)")
--= 5

print(module.var)
--= test

IF module.var3 ISA module.choice.apple THEN
    print("\(module.var3.apple)")
END IF
--= 3

print(module.let)
--= green

print("\(module.function(5))")
--= 25

VAR x: Number := 7
module.modify(INOUT x)
print("\(x)")
--= 14

TRY
    RAISE module.Exception
TRAP module.Exception DO
    print("exception 1")
END TRY
--= exception 1

TRY
    module.raise()
TRAP module.Exception DO
    print("exception 2")
END TRY
--= exception 2

print(str(module.functionpointer(5)))
--= 25

LET fp: FUNCTION(x: Number): Number := module.function
print(fp(4))
--= 16
