%|
 |  File: runtime
 |
 |  Functions that interact with the Neon runtime system.
 |%

EXPORT garbageCollect
EXPORT getAllocatedObjectCount
EXPORT moduleIsMain
EXPORT setGarbageCollectionInterval
EXPORT setRecursionLimit
EXPORT isDebug

%|
 |  Function: garbageCollect
 |
 |  Force a garbage collection immediately. It is not normally necessary
 |  to call this function, since garbage collection is automatically run
 |  after a predetermined number of new allocations.
 |  Use <setGarbageCollectionInterval> to change the automatic behaviour.
 |%
DECLARE NATIVE FUNCTION garbageCollect()

%|
 |  Function: getAllocatedObjectCount
 |
 |  Return the number of objects currently allocated. This includes
 |  objects that may be eligible for garbage collection.
 |%
DECLARE NATIVE FUNCTION getAllocatedObjectCount(): Number

%|
 |  Function: moduleIsMain
 |
 |  Return TRUE if the calling module is being run as the main program.
 |  Return FALSE if the calling module has been imported with IMPORT.
 |%
DECLARE NATIVE FUNCTION moduleIsMain(): Boolean

%|
 |  Function: setGarbageCollectionInterval
 |
 |  Set the interval that determines when garbage collection will be run.
 |  The count refers to the number of allocations. The default is 1000
 |  allocations. Setting this value to 0 disables automatic garbage
 |  collection.
 |%
DECLARE NATIVE FUNCTION setGarbageCollectionInterval(count: Number)

%|
 |  Function: setRecursionLimit
 |
 |  Set the maximum permitted call stack depth. The default limit is
 |  1000. Exceeding this limit raises a <StackOverflow> exception.
 |%
DECLARE NATIVE FUNCTION setRecursionLimit(depth: Number)

%|
 |  Function: isDebug
 |
 |  Check the current compilation mode of the Runtime.  If compiled
 |  with debug symbols, isDebug() will return TRUE.  FALSE otherwise.
 |%
DECLARE NATIVE FUNCTION isDebug(): Boolean
