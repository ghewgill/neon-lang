--  File: binary
--
--  Bitwise binary logical operations on 32-bit words.

EXPORT and32
EXPORT and64
EXPORT andBytes
EXPORT extract32
EXPORT extract64
EXPORT get32
EXPORT get64
EXPORT not32
EXPORT not64
EXPORT notBytes
EXPORT or32
EXPORT or64
EXPORT orBytes
EXPORT replace32
EXPORT replace64
EXPORT set32
EXPORT set64
EXPORT shiftLeft32
EXPORT shiftLeft64
EXPORT shiftRight32
EXPORT shiftRight64
EXPORT shiftRightSigned32
EXPORT shiftRightSigned64
EXPORT xor32
EXPORT xor64
EXPORT xorBytes

--  Function: and32
--
--  Bitwise logical "and" of two 32-bit words.
--
--  For each bit in the inputs, the following truth table
--  determines the output bit:
--
--  >    | 0 | 1 | <- x
--  > ---+---+---+
--  >  0 | 0 | 0 |
--  > ---+---+---+
--  >  1 | 0 | 1 |
--  > ---+---+---+
--  >  ^
--  >  y
DECLARE NATIVE FUNCTION and32(x, y: Number): Number

--  Function: and64
--
--  Bitwise logical "and" of two 64-bit words.
--
--  For each bit in the inputs, the following truth table
--  determines the output bit:
--
--  >    | 0 | 1 | <- x
--  > ---+---+---+
--  >  0 | 0 | 0 |
--  > ---+---+---+
--  >  1 | 0 | 1 |
--  > ---+---+---+
--  >  ^
--  >  y
DECLARE NATIVE FUNCTION and64(x, y: Number): Number

--  Function: andBytes
--
--  Bitwise logical "and" of two Bytes buffers. The size of
--  both input parameters must be the same.
--
--  For each bit in the inputs, the following truth table
--  determines the output bit:
--
--  >    | 0 | 1 | <- x
--  > ---+---+---+
--  >  0 | 0 | 0 |
--  > ---+---+---+
--  >  1 | 0 | 1 |
--  > ---+---+---+
--  >  ^
--  >  y
DECLARE NATIVE FUNCTION andBytes(x, y: Bytes): Bytes

--  Function: extract32
--
--  Extract a range of bits from a 32-bit word.
--
--  Parameters:
--      x - number to extract bits from
--      n - bit position of the lowest order bit to extract
--      w - width of bit range to extract
--
--  Description:
--      This function extracts a given range of bits. The bits
--      in an word are numbered starting at 0 for the least
--      significant bit.
--
--      The function call
--
--      > binary.extract(x, 5, 3)
--
--      will extract the following bits from the word
--
--      > 31    28      24      20      16      12       8       4       0
--      > +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
--      > | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | |
--      > +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
--      >                                                 |     |
--      >                                                 +-----+
DECLARE NATIVE FUNCTION extract32(x, n, w: Number): Number

--  Function: extract64
--
--  Extract a range of bits from a 64-bit word.
--
--  Parameters:
--      x - number to extract bits from
--      n - bit position of the lowest order bit to extract
--      w - width of bit range to extract
--
--  Description:
--      This function extracts a given range of bits. The bits
--      in an word are numbered starting at 0 for the least
--      significant bit.
--
--      The function call
--
--      > binary.extract(x, 5, 3)
--
--      will extract the following bits from the word
--
--      > 31    28      24      20      16      12       8       4       0
--      > +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
--      > | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | |
--      > +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
--      >                                                 |     |
--      >                                                 +-----+
DECLARE NATIVE FUNCTION extract64(x, n, w: Number): Number

--  Function: get32
--
--  Get a specific bit from a 32-bit word.
--
--  Parameters:
--      x - number to extract the bit from
--      n - bit position of the bit to extract
--
--  Description:
--      This function returns a Boolean value indicting whether
--      the indicated bit is set (TRUE) or not (FALSE).
DECLARE NATIVE FUNCTION get32(x, n: Number): Boolean

--  Function: get64
--
--  Get a specific bit from a 64-bit word.
--
--  Parameters:
--      x - number to extract the bit from
--      n - bit position of the bit to extract
--
--  Description:
--      This function returns a Boolean value indicting whether
--      the indicated bit is set (TRUE) or not (FALSE).
DECLARE NATIVE FUNCTION get64(x, n: Number): Boolean

--  Function: not32
--
--  Invert all bits in a 32-bit word.
DECLARE NATIVE FUNCTION not32(x: Number): Number

--  Function: not64
--
--  Invert all bits in a 64-bit word.
DECLARE NATIVE FUNCTION not64(x: Number): Number

--  Function: notBytes
--
--  Invert all bits in a Bytes buffer.
DECLARE NATIVE FUNCTION notBytes(x: Bytes): Bytes

--  Function: or32
--
--  Bitwise logical "or" of two 32-bit words.
--
--  For each bit in the inputs, the following truth table
--  determines the output bit:
--
--  >    | 0 | 1 | <- x
--  > ---+---+---+
--  >  0 | 0 | 1 |
--  > ---+---+---+
--  >  1 | 1 | 1 |
--  > ---+---+---+
--  >  ^
--  >  y
DECLARE NATIVE FUNCTION or32(x, y: Number): Number

--  Function: or64
--
--  Bitwise logical "or" of two 64-bit words.
--
--  For each bit in the inputs, the following truth table
--  determines the output bit:
--
--  >    | 0 | 1 | <- x
--  > ---+---+---+
--  >  0 | 0 | 1 |
--  > ---+---+---+
--  >  1 | 1 | 1 |
--  > ---+---+---+
--  >  ^
--  >  y
DECLARE NATIVE FUNCTION or64(x, y: Number): Number

--  Function: orBytes
--
--  Bitwise logical "or" of two Bytes buffers. The size of
--  both input parameters must be the same.
--
--  For each bit in the inputs, the following truth table
--  determines the output bit:
--
--  >    | 0 | 1 | <- x
--  > ---+---+---+
--  >  0 | 0 | 1 |
--  > ---+---+---+
--  >  1 | 1 | 1 |
--  > ---+---+---+
--  >  ^
--  >  y
DECLARE NATIVE FUNCTION orBytes(x, y: Bytes): Bytes

--  Function: replace32
--
--  Replace a range of bits in a 32-bit word.
--
--  Parameters:
--      x - number to replace bits into
--      n - bit position of the lowest order bit to replace
--      w - width of bit range to replace
--      y - new bits to replace
--
--  Description:
--      This function replaces a given range of bits with new bits.
--      The bits in an word are numbered starting at 0 for the least
--      significant bit.
--
--      The function call
--
--      > binary.replace(x, 5, 3, 7)
--
--      will replace the following bits in the word
--
--      > 31    28      24      20      16      12       8       4       0
--      > +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
--      > | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | |
--      > +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
--      >                                                 |     |
--      >                                                 +-----+
--
--      Each of the bits numbered 5, 6, and 7 would be set to 1 (from the
--      input value 7).
DECLARE NATIVE FUNCTION replace32(x, n, w, y: Number): Number

--  Function: replace64
--
--  Replace a range of bits in a 64-bit word.
--
--  Parameters:
--      x - number to replace bits into
--      n - bit position of the lowest order bit to replace
--      w - width of bit range to replace
--      y - new bits to replace
--
--  Description:
--      This function replaces a given range of bits with new bits.
--      The bits in an word are numbered starting at 0 for the least
--      significant bit.
--
--      The function call
--
--      > binary.replace(x, 5, 3, 7)
--
--      will replace the following bits in the word
--
--      > 31    28      24      20      16      12       8       4       0
--      > +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
--      > | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | |
--      > +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
--      >                                                 |     |
--      >                                                 +-----+
--
--      Each of the bits numbered 5, 6, and 7 would be set to 1 (from the
--      input value 7).
DECLARE NATIVE FUNCTION replace64(x, n, w, y: Number): Number

--  Function: set32
--
--  Set a specific bit in a 32-bit word.
--
--  Parameters:
--      x - number to set the bit
--      n - bit position of the bit to set
--      v - bit value to set, 0 (FALSE) or 1 (TRUE)
--
--  Description:
--      This function returns a new value with the given bit
--      set according to the parameter v.
DECLARE NATIVE FUNCTION set32(x, n: Number, v: Boolean): Number

--  Function: set64
--
--  Set a specific bit in a 64-bit word.
--
--  Parameters:
--      x - number to set the bit
--      n - bit position of the bit to set
--      v - bit value to set, 0 (FALSE) or 1 (TRUE)
--
--  Description:
--      This function returns a new value with the given bit
--      set according to the parameter v.
DECLARE NATIVE FUNCTION set64(x, n: Number, v: Boolean): Number

--  Function: shiftLeft32
--
--  Shift a 32-bit word left by a given number of bits.
--
--  Parameters:
--      x - word to shift
--      n - number of bits to shift left
--
--  Description:
--      New bits shifted into the right hand side of the word are 0.
DECLARE NATIVE FUNCTION shiftLeft32(x, n: Number): Number

--  Function: shiftLeft64
--
--  Shift a 64-bit word left by a given number of bits.
--
--  Parameters:
--      x - word to shift
--      n - number of bits to shift left
--
--  Description:
--      New bits shifted into the right hand side of the word are 0.
DECLARE NATIVE FUNCTION shiftLeft64(x, n: Number): Number

--  Function: shiftRight32
--
--  Shift a 32-bit word right by a given number of bits.
--
--  Parameters:
--      x - word to shift
--      n - number of bits to shift right
--
--  Description:
--      New bits shifted into the left hand side of the word are 0.
DECLARE NATIVE FUNCTION shiftRight32(x, n: Number): Number

--  Function: shiftRight64
--
--  Shift a 64-bit word right by a given number of bits.
--
--  Parameters:
--      x - word to shift
--      n - number of bits to shift right
--
--  Description:
--      New bits shifted into the left hand side of the word are 0.
DECLARE NATIVE FUNCTION shiftRight64(x, n: Number): Number

--  Function: shiftRightSigned32
--
--  Shift a 32-bit word right by a given number of bits, preserving the sign bit.
--
--  Parameters:
--      x - word to shift
--      n - number of bits to shift right
--
--  Description:
--      New bits shifted into the left hand side of the word are the same as the original leftmost bit.
DECLARE NATIVE FUNCTION shiftRightSigned32(x, n: Number): Number

--  Function: shiftRightSigned64
--
--  Shift a 64-bit word right by a given number of bits, preserving the sign bit.
--
--  Parameters:
--      x - word to shift
--      n - number of bits to shift right
--
--  Description:
--      New bits shifted into the left hand side of the word are the same as the original leftmost bit.
DECLARE NATIVE FUNCTION shiftRightSigned64(x, n: Number): Number

--  Function: xor32
--
--  Bitwise logical "exclusive-or" of two 32-bit words.
--
--  For each bit in the inputs, the following truth table
--  determines the output bit:
--
--  >    | 0 | 1 | <- x
--  > ---+---+---+
--  >  0 | 0 | 1 |
--  > ---+---+---+
--  >  1 | 1 | 0 |
--  > ---+---+---+
--  >  ^
--  >  y
DECLARE NATIVE FUNCTION xor32(x, y: Number): Number

--  Function: xor64
--
--  Bitwise logical "exclusive-or" of two 64-bit words.
--
--  For each bit in the inputs, the following truth table
--  determines the output bit:
--
--  >    | 0 | 1 | <- x
--  > ---+---+---+
--  >  0 | 0 | 1 |
--  > ---+---+---+
--  >  1 | 1 | 0 |
--  > ---+---+---+
--  >  ^
--  >  y
DECLARE NATIVE FUNCTION xor64(x, y: Number): Number

--  Function: xorBytes
--
--  Bitwise logical "exclusive-or" of two Bytes buffers. The size of
--  both input parameters must be the same.
--
--  For each bit in the inputs, the following truth table
--  determines the output bit:
--
--  >    | 0 | 1 | <- x
--  > ---+---+---+
--  >  0 | 0 | 1 |
--  > ---+---+---+
--  >  1 | 1 | 0 |
--  > ---+---+---+
--  >  ^
--  >  y
DECLARE NATIVE FUNCTION xorBytes(x, y: Bytes): Bytes
