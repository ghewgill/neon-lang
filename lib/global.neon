%|
 |  File: global
 |
 |  Global names that are available everywhere.
 |%

%|
 |  Type: Boolean
 |
 |  TRUE or FALSE.
 |%

%|
 |  Type: Number
 |
 |  Floating point number with 34 decimal digits of precision.
 |%

%|
 |  Type: String
 |
 |  Unicode string.
 |%

%|
 |  Type: Array
 |
 |  Parameterised sequence type. Example
 |
 |  > Array<String>
 |%

%|
 |  Type: Dictionary
 |
 |  Parameterised map type from <String> to the given type. Example
 |
 |  > Dictionary<String>
 |%

%|
 |  Type: Bytes
 |
 |  Bytes.
 |%

%|
 |  Exception: ArrayIndex
 |
 |  An array index is not valid or out of range.
 |%
DECLARE EXCEPTION ArrayIndex

%|
 |  Exception: AssertFailed
 |
 |  Assert failed.
 |%
DECLARE EXCEPTION AssertFailed

%|
 |  Exception: ByteOutOfRange
 |
 |  A byte is out of range in toBytes().
 |%
DECLARE EXCEPTION ByteOutOfRange

%|
 |  Exception: DictionaryIndex
 |
 |  A dictionary index value does not exist.
 |%
DECLARE EXCEPTION DictionaryIndex

%|
 |  Exception: DivideByZero
 |
 |  Divide by zero.
 |%
DECLARE EXCEPTION DivideByZero

%|
 |  Exception: EndOfFile
 |
 |  End of input file.
 |%
DECLARE EXCEPTION EndOfFile

%|
 |  Exception: FormatException
 |
 |  Format specifier not valid.
 |%
DECLARE EXCEPTION FormatException

%|
 |  Exception: InvalidFunction
 |
 |  An invalid function pointer was called.
 |%
DECLARE EXCEPTION InvalidFunction

%|
 |  Exception: InvalidValue
 |
 |  An invalid value was passed to a library function.
 |%
DECLARE EXCEPTION InvalidValue

%|
 |  Exception: FunctionNotFound
 |
 |  Function not found.
 |%
DECLARE EXCEPTION FunctionNotFound

%|
 |  Exception: LibraryNotFound
 |
 |  Library not found.
 |%
DECLARE EXCEPTION LibraryNotFound

%|
 |  Exception: StackOverflow
 |
 |  Call stack exceeded limit.
 |%
DECLARE EXCEPTION StackOverflow

%|
 |  Exception: Utf8Encoding
 |
 |  Invalid UTF-8 encoding in Bytes.toString().
 |%
DECLARE EXCEPTION Utf8Encoding

%|
 |  Exception: ValueRange
 |
 |  An input value is out of range.
 |%
DECLARE EXCEPTION ValueRange

%|
 |  Exception: StringIndex
 |
 |  An attempt was made to read or reference a string beyond with a length 
 |  that goes beyond the end of the string.
 |%
DECLARE EXCEPTION StringIndex

DECLARE NATIVE FUNCTION array__append(INOUT self: Array, element: Cell)
DECLARE NATIVE FUNCTION array__concat(left: Array, right: Array): Array
DECLARE NATIVE FUNCTION array__extend(INOUT self: Array, elements: Array)
DECLARE NATIVE FUNCTION array__resize(INOUT self: Array, new_size: Number)
DECLARE NATIVE FUNCTION array__size(self: Array): Number
DECLARE NATIVE FUNCTION array__slice(a: Array, first: Number, first_from_end: Boolean, last: Number, last_from_end: Boolean): Array
DECLARE NATIVE FUNCTION array__splice(b: Array, a: Array, first: Number, first_from_end: Boolean, last: Number, last_from_end: Boolean): Array
DECLARE NATIVE FUNCTION array__toBytes__number(self: Array<Number>): Bytes
DECLARE NATIVE FUNCTION array__toString__number(self: Array<Number>): String
DECLARE NATIVE FUNCTION array__toString__string(self: Array<String>): String
DECLARE NATIVE FUNCTION boolean__toString(self: Boolean): String
DECLARE NATIVE FUNCTION dictionary__size(self: Dictionary): Number
DECLARE NATIVE FUNCTION dictionary__keys(self: Dictionary): Array<String>
DECLARE NATIVE FUNCTION number__toString(self: Number): String
DECLARE NATIVE FUNCTION string__append(INOUT self: String, t: String)
DECLARE NATIVE FUNCTION string__length(self: String): Number
DECLARE NATIVE FUNCTION string__splice(t: String, s: String, first: Number, first_from_end: Boolean, last: Number, last_from_end: Boolean): String
DECLARE NATIVE FUNCTION string__substring(s: String, first: Number, first_from_end: Boolean, last: Number, last_from_end: Boolean): String
DECLARE NATIVE FUNCTION string__toBytes(self: String): Bytes
DECLARE NATIVE FUNCTION bytes__range(s: String, first: Number, first_from_end: Boolean, last: Number, last_from_end: Boolean): Bytes
DECLARE NATIVE FUNCTION bytes__size(self: Bytes): Number
DECLARE NATIVE FUNCTION bytes__splice(t: String, s: String, first: Number, first_from_end: Boolean, last: Number, last_from_end: Boolean): Bytes
DECLARE NATIVE FUNCTION bytes__toArray(self: Bytes): Array<Number>
DECLARE NATIVE FUNCTION bytes__toString(self: Bytes): String
DECLARE NATIVE FUNCTION pointer__toString(self: POINTER): String
DECLARE NATIVE FUNCTION functionpointer__toString(self: Cell): String

%|
 |  Function: chr
 |
 |  Convert a number to the corresponding Unicode character.
 |%
DECLARE NATIVE FUNCTION chr(x: Number): String

%|
 |  Function: concat
 |
 |  Concatenate two strings. Same as the & operator.
 |%
DECLARE NATIVE FUNCTION concat(a: String, b: String): String

%|
 |  Function: concatBytes
 |
 |  Concatenate two bytes. Same as the & operator for <Bytes>.
 |%
DECLARE NATIVE FUNCTION concatBytes(a: Bytes, b: Bytes): Bytes

%|
 |  Function: format
 |
 |  Format a string based on the formatting mini-language.
 |
 |  TODO
 |%
DECLARE NATIVE FUNCTION format(str: String, fmt: String): String

%|
 |  Function: input
 |
 |  Read a line of input from the terminal after printing a prompt.
 |%
DECLARE NATIVE FUNCTION input(prompt: String): String

%|
 |  Function: int
 |
 |  Truncate a floating point number to the nearest integer whose
 |  absolute value is closest to zero.
 |%
DECLARE NATIVE FUNCTION int(a: Number): Number

%|
 |  Function: max
 |
 |  Return the greater of two numbers.
 |%
DECLARE NATIVE FUNCTION max(a: Number, b: Number): Number

%|
 |  Function: min
 |
 |  Return the lesser of two numbers.
 |%
DECLARE NATIVE FUNCTION min(a: Number, b: Number): Number

%|
 |  Function: num
 |
 |  Convert a decimal number as a string to a number.
 |%
DECLARE NATIVE FUNCTION num(s: String): Number

%|
 |  Function: ord
 |
 |  Return the Unicode value of a given character.
 |  The input string must be a single character.
 |%
DECLARE NATIVE FUNCTION ord(s: String): Number

%|
 |  Function: print
 |
 |  Print a string to standard output followed by a newline.
 |%
DECLARE NATIVE FUNCTION print(s: String)

%|
 |  Function: str
 |
 |  Convert a number to a decimal string.
 |%
DECLARE NATIVE FUNCTION str(x: Number): String

%|
 |  Function: strb
 |
 |  Convert a boolean to a string, either TRUE or FALSE.
 |%
DECLARE NATIVE FUNCTION strb(x: Boolean): String

%|
 |  Function: substring
 |
 |  Return a range of a string with the given offset and length.
 |%
DECLARE NATIVE FUNCTION substring(s: String, offset: Number, length: Number): String
