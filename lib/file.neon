%|
 |  File: file
 |
 |  Functions for working with files and directories.
 |%

EXPORT DirectoryExists
EXPORT FileError
EXPORT FileOpenError
EXPORT FileWriteError
EXPORT PathNotFound
EXPORT PermissionDenied
EXPORT pathJoin
EXPORT pathSplit
EXPORT removeDirectoryTree

DECLARE NATIVE CONSTANT Separator: String

%|
 |  Exception: DirectoryExists
 |
 |  Indicates that a directory already exists when calling <mkdir>.
 |%
DECLARE EXCEPTION DirectoryExists

%|
 |  Exception: FileError
 |
 |  Generic file error.
 |%
DECLARE EXCEPTION FileError

%|
 |  Exception: FileOpenError
 |
 |  Indicates that an error occurred when opening a file.
 |%
DECLARE EXCEPTION FileOpenError

%|
 |  Exception: FileWriteError
 |
 |  Indicates that an error occurred while writing to a file.
 |%
DECLARE EXCEPTION FileWriteError

%|
 |  Exception: PathNotFound
 |
 |  Indicates that a path was not found.
 |%
DECLARE EXCEPTION PathNotFound

%|
 |  Exception: PermissionDenied
 |
 |  Indicates that an operation was denied due to filesystem permisssions.
 |%
DECLARE EXCEPTION PermissionDenied

%|
 |  Function: copy
 |
 |  Copy a file.
 |%
DECLARE NATIVE FUNCTION copy(filename: String, destination: String)

%|
 |  Function: delete
 |
 |  Delete a file. This function does not raise an exception
 |  if the file does not exist.
 |
 |  Exceptions:
 |      - <PermissionDenied> - if the file permissions prevent the operation
 |%
DECLARE NATIVE FUNCTION delete(filename: String)

%|
 |  Function: exists
 |
 |  Check to see whether a name exists in the filesystem.
 |  The name may refer to either a file or a directory.
 |%
DECLARE NATIVE FUNCTION exists(filename: String): Boolean

%|
 |  Function: files
 |
 |  Given a path name, return an array containing the names of the files in that directory.
 |%
DECLARE NATIVE FUNCTION files(path: String): Array<String>

%|
 |  Function: isDirectory
 |
 |  Similar to <exists>, but only returns TRUE if the path actually is a directory.
 |%
DECLARE NATIVE FUNCTION isDirectory(path: String): Boolean

%|
 |  Function: mkdir
 |
 |  Create a new directory with the given name.
 |
 |  Exceptions:
 |      - <PermissionDenied> - if the file permissions prevent the operation
 |      - <DirectoryExists> - if the directory already exists
 |      - <PathNotFound> - if the path (not including the last component) does not exist
 |%
DECLARE NATIVE FUNCTION mkdir(path: String)

%|
 |  Function: pathJoin
 |
 |  Join components of a path using the <Separator> characters appropriate for the OS.
 |%
FUNCTION pathJoin(first, second: String): String
    IF first = "" THEN
        RETURN second
    END IF
    IF second = "" THEN
        RETURN first
    END IF
    IF second[FIRST] IN ["/", Separator] THEN
        RETURN second
    END IF
    IF first[LAST] IN ["/", Separator] THEN
        RETURN first & second
    ELSE
        RETURN first & Separator & second
    END IF
END FUNCTION

%|
 |  Function: pathSplit
 |
 |  Split a path into directory and name parts.
 |%
FUNCTION pathSplit(path: String, OUT directory, name: String)
    FOR i := path.length() - 1 TO 0 STEP -1 DO
        IF path[i] IN ["/", Separator] THEN
            directory := path[FIRST TO i - 1]
            name := path[i + 1 TO LAST]
            EXIT FUNCTION
        END IF
    END FOR
    directory := ""
    name := path
END FUNCTION

%|
 |  Function: readBytes
 |
 |  Read the contents of a file into <Bytes>.
 |
 |  Exceptions:
 |      - <FileOpenError> - if the file cannot be opened
 |%
DECLARE NATIVE FUNCTION readBytes(filename: String): Bytes

%|
 |  Function: readLines
 |
 |  Read the lines of a file into an array of <Strings>.
 |
 |  Exceptions:
 |      - <FileOpenError> - if the file cannot be opened
 |%
DECLARE NATIVE FUNCTION readLines(filename: String): Array<String> 

%|
 |  Function: removeDirectoryTree
 |
 |  Remove directory tree recursively.
 |%
FUNCTION removeDirectoryTree(path: String)
    LET names: Array<String> := files(path)
    FOREACH name OF names DO
        IF name IN [".", ".."] THEN
            NEXT FOREACH
        END IF
        LET pathname: String := pathJoin(path, name)
        IF isDirectory(name) THEN
            removeDirectoryTree(pathname)
        ELSE
            delete(pathname)
        END IF
    END FOREACH
    removeEmptyDirectory(path)
END FUNCTION

%|
 |  Function: removeEmptyDirectory
 |
 |  Remove an empty directory.
 |%
DECLARE NATIVE FUNCTION removeEmptyDirectory(path: String)

%|
 |  Function: rename
 |
 |  Rename a file. This function can also be used to move a file from
 |  one directory to another.
 |
 |  Exceptions:
 |      - <PathNotFound> - if the file does not exist
 |%
DECLARE NATIVE FUNCTION rename(oldname: String, newname: String)

%|
 |  Function: writeBytes
 |
 |  Write a complete file from data in <Bytes>.
 |
 |  Exceptions:
 |      - <FileOpenError> - if the file cannot be opened
 |      - <FileWriteError> - if an error occurs during writing
 |%
DECLARE NATIVE FUNCTION writeBytes(filename: String, data: Bytes)

%|
 |  Function: writeLines
 |
 |  Write a complete file from lines of text in an array.
 |
 |  Exceptions:
 |      - <FileOpenError> - if the file cannot be opened
 |      - <FileWriteError> - if an error occurs during writing
 |%
DECLARE NATIVE FUNCTION writeLines(filename: String, data: Array<String>)
