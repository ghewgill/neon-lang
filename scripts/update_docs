#!/bin/sh -e

# Figure out our current revision for later commit message
rev=$(git describe --always)

# Build documentation
make docs docs_samples
(cd gh-pages && jekyll build)
env CI=true npx antora --stacktrace antora-playbook.yml

# Remove temporary gh-pages branch location
rm -rf tmp-gh-pages

# Check out gh-pages branch into temp dir
git clone -b gh-pages . tmp-gh-pages
(cd tmp-gh-pages && git pull --ff-only .. origin/gh-pages)

# Clean out the whole temp thing
rm -rf tmp-gh-pages/* $(ls -d tmp-gh-pages/.* | grep -v -E '/\.(\.|git)?$')

# Copy generated documentation to temporary dir
cp -r gh-pages/_site/. tmp-gh-pages/            # web site main pages
cp -r build/site/. tmp-gh-pages/docs/           # antora language documentation
cp -r gh-pages/lib tmp-gh-pages/                # naturaldocs library
cp -r gh-pages/samples tmp-gh-pages/            # naturaldocs samples

# Remove .gitignore so we can sensibly commit generated files
rm -f tmp-gh-pages/lib/.gitignore tmp-gh-pages/samples/.gitignore
cp .git/info/exclude tmp-gh-pages/.git/info/

# Add .nojekyll file because we have already done that and don't need github to do it again
touch tmp-gh-pages/.nojekyll

# Commit everything in temp dir to branch
(cd tmp-gh-pages && git add --all . && git commit -m "Update documentation from $rev" && git push)

# Clean out temp dir
rm -rf tmp-gh-pages

# Prompt command to push
echo "git push origin gh-pages:gh-pages"
